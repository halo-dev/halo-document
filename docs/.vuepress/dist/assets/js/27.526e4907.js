(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{280:function(a,t,s){"use strict";s.r(t);var e=s(9),r=Object(e.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"使用-docker-部署-halo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-部署-halo","aria-hidden":"true"}},[a._v("#")]),a._v(" 使用 Docker 部署 Halo")]),a._v(" "),s("p",[a._v("使用 "),s("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("Docker")]),s("OutboundLink")],1),a._v(" 部署 "),s("code",[a._v("Halo")]),a._v(" 的指南，假设你已经安装好了 "),s("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("Docker")]),s("OutboundLink")],1),a._v(" 并了解它的基本使用。本篇教程以 "),s("code",[a._v("CentOS 7.x")]),a._v(" 为例，其他系统大同小异。")]),a._v(" "),s("h2",{attrs:{id:"环境要求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#环境要求","aria-hidden":"true"}},[a._v("#")]),a._v(" 环境要求")]),a._v(" "),s("p",[a._v("为了在使用过程中不出现意外的事故，给出下列推荐的配置")]),a._v(" "),s("ul",[s("li",[a._v("1G RAM 的服务器")]),a._v(" "),s("li",[a._v("Nginx/Caddy")])]),a._v(" "),s("p",[a._v("在开始之前，最好先到域名服务商解析域名，设置 A 记录并指向服务器的 IP 地址，并确保已经正确解析以及没有被工信部拦截（国内服务器需备案），你可以在本地使用 Ping 命令检查域名是否已经正确解析到了服务器的 IP 地址。以方便在安装过程中为域名配置 SSL 证书。")]),a._v(" "),s("h2",{attrs:{id:"服务器配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#服务器配置","aria-hidden":"true"}},[a._v("#")]),a._v(" 服务器配置")]),a._v(" "),s("h3",{attrs:{id:"更新软件包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新软件包","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新软件包")]),a._v(" "),s("p",[a._v("请确保服务器的软件包已经是最新的。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum update -y\n")])])]),s("h3",{attrs:{id:"配置-docker-运行环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-docker-运行环境","aria-hidden":"true"}},[a._v("#")]),a._v(" 配置 Docker 运行环境")]),a._v(" "),s("blockquote",[s("p",[a._v("如果你已经安装过 "),s("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("Docker")]),s("OutboundLink")],1),a._v("，请略过此步骤。")])]),a._v(" "),s("p",[a._v("这里推荐使用官方文档进行安装 "),s("a",{attrs:{href:"https://docs.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[s("code",[a._v("Docker")]),s("OutboundLink")],1),a._v("。")]),a._v(" "),s("blockquote",[s("p",[s("a",{attrs:{href:"https://docs.docker.com/install/linux/docker-ce/centos/",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://docs.docker.com/install/linux/docker-ce/centos/"),s("OutboundLink")],1)])]),a._v(" "),s("p",[a._v("同时我们也提供一个本土化的安装方法。")]),a._v(" "),s("p",[a._v("这里只做演示，个别系统的安装方式可能会不一样，仅供参考。")]),a._v(" "),s("h4",{attrs:{id:"安装必要依赖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装必要依赖","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装必要依赖")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y yum-utils device-mapper-persistent-data lvm2\n")])])]),s("h4",{attrs:{id:"添加软件源信息"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#添加软件源信息","aria-hidden":"true"}},[a._v("#")]),a._v(" 添加软件源信息")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\n")])])]),s("h4",{attrs:{id:"更新-yum-缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新-yum-缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新 yum 缓存")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum makecache fast\n")])])]),s("h4",{attrs:{id:"安装-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-docker","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 Docker")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" docker-ce docker-ce-cli containerd.io\n")])])]),s("h4",{attrs:{id:"启动-docker-后台服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-docker-后台服务","aria-hidden":"true"}},[a._v("#")]),a._v(" 启动 Docker 后台服务")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" systemctl start docker\n")])])]),s("h4",{attrs:{id:"允许当前用户直接运行-docker-命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#允许当前用户直接运行-docker-命令","aria-hidden":"true"}},[a._v("#")]),a._v(" 允许当前用户直接运行 "),s("code",[a._v("docker")]),a._v(" 命令")]),a._v(" "),s("p",[a._v("需要将当前用户加入 "),s("code",[a._v("docker")]),a._v(" 用户组。这样每次运行 "),s("code",[a._v("docker")]),a._v(" 命令的时候，就不需要加 "),s("code",[a._v("sudo")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("usermod")]),a._v(" -aG docker your_name\n")])])]),s("blockquote",[s("p",[a._v("注意：设置成功之后需要重新登录才会生效。")])]),a._v(" "),s("h4",{attrs:{id:"镜像加速"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#镜像加速","aria-hidden":"true"}},[a._v("#")]),a._v(" 镜像加速")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 新建 daemon.json 文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" /etc/docker/daemon.json\n")])])]),s("p",[a._v("将下面的配置复制进去即可：")]),a._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[a._v('"registry-mirrors"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"http://hub-mirror.c.163.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("blockquote",[s("p",[a._v("注意：修改完配置文件之后需要执行 "),s("code",[a._v("service docker restart")]),a._v(" 才可生效。")])]),a._v(" "),s("div",[s("AdSense-Doc",{attrs:{"ad-client":"ca-pub-5271828906478846","ad-slot":"2656935500","ad-style":"display:block; text-align:center;","ad-format":"fluid"}})],1),a._v(" "),s("h2",{attrs:{id:"安装-halo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装-halo","aria-hidden":"true"}},[a._v("#")]),a._v(" 安装 Halo")]),a._v(" "),s("h3",{attrs:{id:"自定义配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义配置文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 自定义配置文件")]),a._v(" "),s("p",[a._v("考虑到部分用户的需要，可能需要自定义比如端口等设置项，我们提供了公共的配置文件，并且该配置文件是完全独立于安装包的。当然，你也可以使用安装包内的默认配置文件，但是安装包内的配置文件是不可修改的。请注意：配置文件的路径为 "),s("code",[a._v("~/.halo/application.yaml")]),a._v("。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 下载配置文件到 ~/.halo 目录")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" -o ~/.halo/application.yaml --create-dirs https://raw.githubusercontent.com/halo-dev/halo-common/master/application-template.yaml\n")])])]),s("h3",{attrs:{id:"修改配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改配置文件","aria-hidden":"true"}},[a._v("#")]),a._v(" 修改配置文件")]),a._v(" "),s("p",[a._v("完成上一步操作，我们就可以自己配置 Halo 的运行端口，以及数据库相关的配置了。")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 Vim 工具修改配置文件")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" ~/.halo/application.yaml\n")])])]),s("p",[a._v("打开之后我们可以看到：")]),a._v(" "),s("ul",[s("li",[a._v("H2 配置如下：")])]),a._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8090")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("datasource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.zaxxer.hikari.HikariDataSource\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# H2 Database 配置")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" org.h2.Driver\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" jdbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("h2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("~/halo/db/halo\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" admin\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" openadmin\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("h2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("console")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("settings")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("web-allow-others")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" /h2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("-")]),a._v("console\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[a._v("false")]),a._v("\n")])])]),s("ul",[s("li",[a._v("MySQL 配置如下：")])]),a._v(" "),s("div",{staticClass:"language-yml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("server")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8090")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("spring")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("datasource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# MySQL 配置")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("driver-class-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" com.mysql.cj.jdbc.Driver\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("url")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" jdbc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("mysql"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("//127.0.0.1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("3306/halodb"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("?")]),a._v("characterEncoding=utf8"),s("span",{pre:!0,attrs:{class:"token important"}},[a._v("&useSSL")]),a._v("=false"),s("span",{pre:!0,attrs:{class:"token important"}},[a._v("&serverTimezone")]),a._v("=Asia/Shanghai\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("username")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" root\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[a._v("password")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" openroot\n")])])]),s("ol",[s("li",[a._v("如果需要自定义端口，修改 "),s("code",[a._v("server")]),a._v(" 节点下的 "),s("code",[a._v("port")]),a._v(" 即可。")]),a._v(" "),s("li",[a._v("默认使用的是 "),s("code",[a._v("H2 Database")]),a._v(" 数据库，这是一种嵌入式的数据库，使用起来非常方便。需要注意的是，默认的用户名和密码为 "),s("code",[a._v("admin")]),a._v(" 和 "),s("code",[a._v("123456")]),a._v("，这个是自定义的，最好将其修改，并妥善保存。")]),a._v(" "),s("li",[a._v("如果需要使用 "),s("code",[a._v("MySQL")]),a._v(" 数据库，需要将 "),s("code",[a._v("H2 Database")]),a._v(" 的所有相关配置都注释掉，并取消 "),s("code",[a._v("MySQL")]),a._v(" 的相关配置。另外，"),s("code",[a._v("MySQL")]),a._v(" 的默认数据库名为 "),s("code",[a._v("halodb")]),a._v("，请自行配置 "),s("code",[a._v("MySQL")]),a._v(" 并创建数据库，以及修改配置文件中的用户名和密码。")]),a._v(" "),s("li",[s("code",[a._v("h2")]),a._v(" 节点为 "),s("code",[a._v("H2 Database")]),a._v(" 的控制台配置，默认是关闭的，如需使用请将 "),s("code",[a._v("h2.console.settings.web-allow-others")]),a._v(" 和 "),s("code",[a._v("h2.console.enabled")]),a._v(" 设置为 "),s("code",[a._v("true")]),a._v("。控制台地址即为 "),s("code",[a._v("域名/h2-console")]),a._v("。注意：非紧急情况，不建议开启该配置。")])]),a._v(" "),s("h3",{attrs:{id:"拉取最新-halo-镜像"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#拉取最新-halo-镜像","aria-hidden":"true"}},[a._v("#")]),a._v(" 拉取最新 Halo 镜像")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker pull ruibaby/halo\n")])])]),s("h3",{attrs:{id:"创建容器并运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建容器并运行","aria-hidden":"true"}},[a._v("#")]),a._v(" 创建容器并运行")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("docker run --rm -it -d --name halo-dev -p 8090:8090  -v ~/.halo:/root/.halo ruibaby/halo\n")])])]),s("h3",{attrs:{id:"更新-halo-版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更新-halo-版本","aria-hidden":"true"}},[a._v("#")]),a._v(" 更新 Halo 版本")]),a._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止容器")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker stop halo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 拉取最新的 Halo 镜像")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" docker pull ruibaby/halo\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 创建容器")]),a._v("\ndocker run --rm -it -d --name halo-dev -p 8090:8090  -v ~/.halo:/root/.halo ruibaby/halo\n")])])]),s("p",[a._v("完成以上操作即可通过 "),s("code",[a._v("ip:端口")]),a._v(" 访问了。不过在此之前，最好先完成后续操作，我们还需要让域名也可以访问到 Halo，请继续看 "),s("router-link",{attrs:{to:"/guide/reverse-proxy.html"}},[a._v("配置域名访问")]),a._v("。")],1),a._v(" "),s("div",[s("AdSense-Doc",{attrs:{"ad-client":"ca-pub-5271828906478846","ad-slot":"2656935500","ad-style":"display:block; text-align:center;","ad-format":"fluid"}})],1)])},[],!1,null,null,null);t.default=r.exports}}]);